{
  "name": "WILLOW-CMA-FUB-Synchronization-v32",
  "nodes": [
    {
      "parameters": {},
      "id": "webhook-trigger",
      "name": "GitHub CMA Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "cma-deployment-trigger"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "cma-deployed",
        "responseMode": "responseNode"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.webhookResponse",
      "typeVersion": 1,
      "position": [
        1200,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.followupboss.com/v1/tasks",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "=CMA Delivered - {{ $json.property_address }}"
            },
            {
              "name": "personId",
              "value": "={{ $json.person_id }}"
            },
            {
              "name": "dueDate",
              "value": "={{ $now.plus(2, 'days').format('yyyy-MM-dd') }}"
            }
          ]
        }
      },
      "id": "create-fub-task",
      "name": "Create FUB Task",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        720,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.followupboss.com/v1/notes",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "personId",
              "value": "={{ $json.person_id }}"
            },
            {
              "name": "subject",
              "value": "CMA Deployment Confirmation"
            },
            {
              "name": "body",
              "value": "=AUTOMATED CMA DELIVERY - Property: {{ $json.property_address }} - URL: {{ $json.cma_url }} - Generated by WILLOW v32.0"
            },
            {
              "name": "type",
              "value": "Note"
            }
          ]
        }
      },
      "id": "create-fub-note",
      "name": "Create FUB Activity Note",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        960,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// WILLOW v32.0 - Extract CMA data from GitHub webhook\\nconst payload = $input.all()[0].json;\\n\\n// Initialize extracted data\\nlet extracted_data = {\\n  timestamp: new Date().toISOString(),\\n  source: 'github-webhook',\\n  status: 'processing'\\n};\\n\\n// Check for CMA deployment in commits\\nif (payload.commits && payload.commits.length > 0) {\\n  const commit = payload.commits[0];\\n  const files = commit.added || [];\\n  \\n  // Look for CMA HTML files\\n  const cmaFile = files.find(file => file.includes('.html') && !file.includes('index'));\\n  \\n  if (cmaFile) {\\n    const filename = cmaFile.split('/').pop().replace('.html', '');\\n    const parts = filename.split('-');\\n    \\n    if (parts.length >= 3) {\\n      const lastname = parts[0];\\n      const housenumber = parts[1];\\n      const street = parts.slice(2).join(' ').replace(/-/g, ' ');\\n      \\n      extracted_data = {\\n        ...extracted_data,\\n        property_address: housenumber + ' ' + street,\\n        client_lastname: lastname,\\n        cma_url: 'https://hvscma.com/' + filename,\\n        filename: cmaFile,\\n        person_id: 1903,\\n        status: 'extracted'\\n      };\\n    }\\n  }\\n}\\n\\n// Default test data if no CMA detected\\nif (!extracted_data.property_address) {\\n  extracted_data = {\\n    ...extracted_data,\\n    property_address: '11 Ralph St, Beacon NY 12508',\\n    client_lastname: 'blackwell',\\n    cma_url: 'https://hvscma.com/blackwell-11-ralph-st',\\n    person_id: 1903,\\n    status: 'test-mode'\\n  };\\n}\\n\\nreturn extracted_data;"
      },
      "id": "extract-cma-data",
      "name": "Extract CMA Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        360,
        300
      ]
    }
  ],
  "connections": {
    "GitHub CMA Webhook": {
      "main": [
        [
          {
            "node": "Extract CMA Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract CMA Data": {
      "main": [
        [
          {
            "node": "Create FUB Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create FUB Task": {
      "main": [
        [
          {
            "node": "Create FUB Activity Note",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create FUB Activity Note": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-21T13:54:00.000Z",
      "updatedAt": "2025-07-21T13:54:00.000Z",
      "id": "willow-automation",
      "name": "WILLOW Automation"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-07-21T13:54:00.000Z",
  "versionId": "v32-production"
}